<!-- <!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>All Reports</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css">
  <style>
    body {
      background-color: #121212;
      color: #e0e0e0;
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

    h1 {
      font-weight: bold;
      color: #f8f9fa;
    }

    .card {
      border: none;
      border-radius: 15px;
      overflow: hidden;
      background-color: #1e1e1e;
      transition: transform 0.2s ease-in-out, box-shadow 0.2s;
    }

    .card:hover {
      transform: scale(1.02);
      box-shadow: 0 6px 20px rgba(255, 255, 255, 0.1);
    }

    .card-img-top {
      height: 220px;
      object-fit: cover;
    }

    .card-title {
      font-size: 1.3rem;
      color: #ffffff;
    }

    .card-text,
    .report-time,
    .reporter-name {
      color: #cfcfcf;
    }

    .map-link {
      color: #66b2ff;
      font-weight: 500;
    }

    .badge-location {
      background-color: #0d6efd;
      color: #fff;
      font-size: 0.8rem;
    }

    .report-time,
    .reporter-name {
      font-size: 0.85rem;
    }

    .reporter-name {
      margin-top: 5px;
      font-style: italic;
      color: #aaaaaa;
    }
  </style>
</head>
<body>
  <div class="container py-5">
    <h1 class="mb-5 text-center"><i class="fas fa-triangle-exclamation text-warning"></i> Reported Hazards</h1>

    <% if (reports.length === 0) { %>
      <div class="text-center text-muted">
        <i class="fas fa-info-circle fa-2x"></i>
        <p class="mt-2">No reports found.</p>
      </div>
    <% } else { %>
      <div class="row g-4">
        <% reports.forEach(report => { %>
          <div class="col-md-6 col-lg-4">
            <div class="card shadow-sm">
              <img src="/uploads/<%= report.image %>" class="card-img-top" alt="Hazard Image">
              <div class="card-body">
                <h5 class="card-title"><%= report.title %></h5>
                <p class="card-text"><%= report.description %></p>
                <span class="badge badge-location mb-2"><i class="fas fa-map-marker-alt"></i> <%= report.location %></span><br>
                <a href="<%= report.mapLink %>" target="_blank" class="map-link">
                  <i class="fas fa-map-location-dot"></i> View on Google Maps
                </a>
                <p class="report-time mt-3">
                  <i class="fas fa-clock"></i> Reported on <%= new Date(report.createdAt).toLocaleString() %>
                </p>
                <p class="reporter-name">
                  <i class="fas fa-user"></i> Reported by: <%= report.reporter?.name || "Unknown" %>
                </p>
              </div>
            </div>
          </div>
        <% }) %>
      </div>
    <% } %>
  </div>
</body>
</html> -->




<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>All Reports</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css">
  <style>
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }

    body {
      background: linear-gradient(135deg, #0c0c0c 0%, #1a1a2e 25%, #16213e 50%, #1a1a2e 75%, #0c0c0c 100%);
      background-size: 400% 400%;
      animation: gradientShift 15s ease infinite;
      color: #e0e0e0;
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      min-height: 100vh;
      position: relative;
      overflow-x: hidden;
    }

    /* Animated background particles */
    body::before {
      content: '';
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: 
        radial-gradient(circle at 20% 80%, rgba(120, 119, 198, 0.1) 0%, transparent 50%),
        radial-gradient(circle at 80% 20%, rgba(255, 118, 117, 0.1) 0%, transparent 50%),
        radial-gradient(circle at 40% 40%, rgba(255, 204, 112, 0.1) 0%, transparent 50%);
      animation: float 20s ease-in-out infinite;
      pointer-events: none;
      z-index: -1;
    }

    @keyframes gradientShift {
      0%, 100% { background-position: 0% 50%; }
      50% { background-position: 100% 50%; }
    }

    @keyframes float {
      0%, 100% { transform: translateY(0px) rotate(0deg); }
      33% { transform: translateY(-20px) rotate(1deg); }
      66% { transform: translateY(-10px) rotate(-1deg); }
    }

    /* Header animations */
    h1 {
      font-weight: 800;
      color: #ffffff;
      text-shadow: 0 0 20px rgba(255, 183, 77, 0.5);
      animation: titleGlow 3s ease-in-out infinite alternate;
      position: relative;
    }

    h1::after {
      content: '';
      position: absolute;
      bottom: -10px;
      left: 50%;
      transform: translateX(-50%);
      width: 100px;
      height: 3px;
      background: linear-gradient(90deg, transparent, #ffa500, transparent);
      animation: underlineGlow 2s ease-in-out infinite;
    }

    @keyframes titleGlow {
      0% { text-shadow: 0 0 20px rgba(255, 183, 77, 0.5); }
      100% { text-shadow: 0 0 30px rgba(255, 183, 77, 0.8), 0 0 40px rgba(255, 183, 77, 0.3); }
    }

    @keyframes underlineGlow {
      0%, 100% { opacity: 0.5; transform: translateX(-50%) scaleX(1); }
      50% { opacity: 1; transform: translateX(-50%) scaleX(1.2); }
    }

    /* Card animations and styling */
    .card {
      border: none;
      border-radius: 20px;
      overflow: hidden;
      background: linear-gradient(145deg, #1e1e1e, #2a2a2a);
      box-shadow: 
        0 10px 30px rgba(0, 0, 0, 0.3),
        inset 0 1px 0 rgba(255, 255, 255, 0.1);
      transition: all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);
      position: relative;
      transform: translateY(20px);
      opacity: 0;
      animation: cardSlideIn 0.6s ease-out forwards;
    }

    .card:nth-child(1) { animation-delay: 0.1s; }
    .card:nth-child(2) { animation-delay: 0.2s; }
    .card:nth-child(3) { animation-delay: 0.3s; }
    .card:nth-child(4) { animation-delay: 0.4s; }
    .card:nth-child(5) { animation-delay: 0.5s; }
    .card:nth-child(6) { animation-delay: 0.6s; }

    @keyframes cardSlideIn {
      to {
        transform: translateY(0);
        opacity: 1;
      }
    }

    .card::before {
      content: '';
      position: absolute;
      top: -2px;
      left: -2px;
      right: -2px;
      bottom: -2px;
      background: linear-gradient(45deg, #ff6b6b, #4ecdc4, #45b7d1, #96ceb4, #ffeaa7);
      border-radius: 22px;
      opacity: 0;
      z-index: -1;
      transition: opacity 0.3s ease;
    }

    .card:hover::before {
      opacity: 1;
    }

    .card:hover {
      transform: translateY(-10px) scale(1.02);
      box-shadow: 
        0 20px 40px rgba(0, 0, 0, 0.4),
        0 0 0 1px rgba(255, 255, 255, 0.1);
    }

    .card-img-top {
      height: 220px;
      object-fit: cover;
      transition: transform 0.4s ease;
      position: relative;
    }

    .card:hover .card-img-top {
      transform: scale(1.1);
    }

    .card-img-top::after {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background: linear-gradient(45deg, transparent 30%, rgba(255, 255, 255, 0.1) 50%, transparent 70%);
      transform: translateX(-100%);
      transition: transform 0.6s ease;
    }

    .card:hover .card-img-top::after {
      transform: translateX(100%);
    }

    .card-body {
      padding: 1.5rem;
      position: relative;
    }

    .card-title {
      font-size: 1.4rem;
      font-weight: 700;
      color: #ffffff;
      margin-bottom: 1rem;
      position: relative;
      transition: color 0.3s ease;
    }

    .card:hover .card-title {
      color: #4ecdc4;
    }

    .card-text {
      color: #cfcfcf;
      line-height: 1.6;
      margin-bottom: 1rem;
    }

    .badge-location {
      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
      color: #fff;
      font-size: 0.85rem;
      padding: 0.5rem 1rem;
      border-radius: 20px;
      border: 1px solid rgba(255, 255, 255, 0.1);
      transition: all 0.3s ease;
      display: inline-block;
      margin-bottom: 1rem;
    }

    .badge-location:hover {
      transform: scale(1.05);
      box-shadow: 0 5px 15px rgba(102, 126, 234, 0.4);
    }

    .map-link {
      color: #4ecdc4;
      font-weight: 600;
      text-decoration: none;
      transition: all 0.3s ease;
      position: relative;
      display: inline-block;
    }

    .map-link::after {
      content: '';
      position: absolute;
      bottom: -2px;
      left: 0;
      width: 0;
      height: 2px;
      background: linear-gradient(90deg, #4ecdc4, #44a08d);
      transition: width 0.3s ease;
    }

    .map-link:hover {
      color: #5fede8;
      transform: translateX(5px);
    }

    .map-link:hover::after {
      width: 100%;
    }

    .report-time,
    .reporter-name {
      font-size: 0.9rem;
      color: #aaaaaa;
      margin-top: 0.5rem;
      transition: color 0.3s ease;
    }

    .card:hover .report-time,
    .card:hover .reporter-name {
      color: #cfcfcf;
    }

    .reporter-name {
      font-style: italic;
      border-top: 1px solid rgba(255, 255, 255, 0.1);
      padding-top: 0.5rem;
      margin-top: 1rem;
    }

    /* Enhanced empty state */
    .empty-state {
      text-align: center;
      padding: 4rem 2rem;
      animation: fadeIn 1s ease-in;
    }

    .empty-state i {
      font-size: 4rem;
      color: #4ecdc4;
      margin-bottom: 1rem;
      animation: bounce 2s infinite;
    }

    @keyframes bounce {
      0%, 100% { transform: translateY(0); }
      50% { transform: translateY(-10px); }
    }

    @keyframes fadeIn {
      from { opacity: 0; transform: translateY(20px); }
      to { opacity: 1; transform: translateY(0); }
    }

    /* Loading shimmer effect for images */
    .image-loading {
      background: linear-gradient(90deg, #2a2a2a 25%, #3a3a3a 50%, #2a2a2a 75%);
      background-size: 200% 100%;
      animation: shimmer 1.5s infinite;
    }

    @keyframes shimmer {
      0% { background-position: -200% 0; }
      100% { background-position: 200% 0; }
    }

    /* Responsive enhancements */
    @media (max-width: 768px) {
      .card {
        margin-bottom: 2rem;
      }
      
      h1 {
        font-size: 2rem;
      }
    }

    /* Scroll animations */
    .fade-in-up {
      opacity: 0;
      transform: translateY(30px);
      transition: all 0.6s ease;
    }

    .fade-in-up.animate {
      opacity: 1;
      transform: translateY(0);
    }

    /* Icon animations */
    .fas {
      transition: all 0.3s ease;
    }

    .card:hover .fas {
      transform: scale(1.1);
    }

    .fa-triangle-exclamation {
      animation: pulse 2s infinite;
    }

    @keyframes pulse {
      0% { transform: scale(1); }
      50% { transform: scale(1.05); }
      100% { transform: scale(1); }
    }
  </style>
</head>
<body>
  <div class="container py-5">
    <h1 class="mb-5 text-center">
      <i class="fas fa-triangle-exclamation text-warning"></i> 
      Reported Hazards
    </h1>

  


<% if (reports.length === 0) { %>
  <div class="empty-state">
    <i class="fas fa-info-circle"></i>
    <p class="mt-3" style="font-size: 1.2rem; color: #cfcfcf;">No reports found.</p>
    <p style="color: #aaaaaa;">Check back later for new hazard reports.</p>
  </div>
<% } else { %>
  <div class="row g-4">
    <% reports.forEach(report => { %>
      <div class="col-md-6 col-lg-4">
        <div class="card shadow-sm">
          <img src="/uploads/<%= report.image %>" class="card-img-top" alt="Hazard Image">
          <div class="card-body">
            <h5 class="card-title"><%= report.title %></h5>
            <p class="card-text"><%= report.description %></p>
            <p class="card-text"><%= report.catagory %></p>
            <span class="badge badge-location mb-2">
              <i class="fas fa-map-marker-alt"></i> <%= report.location %>
            </span><br>
            <a href="<%= report.mapLink %>" target="_blank" class="map-link">
              <i class="fas fa-map-location-dot"></i> View on Google Maps
            </a>
            <p class="report-time mt-3">
              <i class="fas fa-clock"></i> Reported on <%= new Date(report.createdAt).toLocaleString() %>
            </p>
            <p class="reporter-name">
              <i class="fas fa-user"></i> Reported by: <%= report.reporter?.fullname || "Unknown" %>
            </p>

            <!-- Voting Buttons -->
            <!-- Voting Buttons -->
<div class="vote-buttons mb-3" data-id="<%= report._id %>">
  <button class="btn btn-sm btn-success vote-btn me-2" data-type="true">
    👍 True (<span class="true-count"><%= report.flag?.trueVotes || 0 %></span>)
  </button>
  <button class="btn btn-sm btn-danger vote-btn" data-type="false">
    👎 False (<span class="false-count"><%= report.flag?.falseVotes || 0 %></span>)
  </button>
</div>



<!-- Status Badge -->
<% if (report.status) { %>
  <span class="badge 
    <% if (report.status === 'Reported') { %> bg-secondary 
    <% } else if (report.status === 'Acknowledged') { %> bg-info 
    <% } else if (report.status === 'In Progress') { %> bg-warning 
    <% } else if (report.status === 'Resolved') { %> bg-success 
    <% } else if (report.status === 'Rejected') { %> bg-danger 
    <% } %> mb-2">
    <i class="fas fa-flag"></i> <%= report.status %>
  </span>
<% } %>


<!-- Comment Button -->
<div class="d-flex justify-content-start">
  <a href="/hazard/<%= report._id %>/comments" 
     class="btn btn-primary btn-sm d-flex align-items-center gap-1 shadow-sm" 
     style="font-weight: 600;">
    <i class="fas fa-comment-alt"></i> Add/View Comments
  </a>
</div>


          </div>
        </div>
      </div>
    <% }) %>
  </div>
<% } %>

    

  <script>
    // Add loading effect to images
    document.addEventListener('DOMContentLoaded', function() {
      const images = document.querySelectorAll('.card-img-top');
      
      // Simulate loading effect
      setTimeout(() => {
        images.forEach(img => {
          img.classList.remove('image-loading');
        });
      }, 2000);

      // Add scroll animations
      const observerOptions = {
        threshold: 0.1,
        rootMargin: '0px 0px -50px 0px'
      };

      const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
          if (entry.isIntersecting) {
            entry.target.classList.add('animate');
          }
        });
      }, observerOptions);

      document.querySelectorAll('.card').forEach(card => {
        card.classList.add('fade-in-up');
        observer.observe(card);
      });
    });

    // Add parallax effect to background
    document.addEventListener('mousemove', (e) => {
      const mouseX = e.clientX / window.innerWidth;
      const mouseY = e.clientY / window.innerHeight;
      
      document.body.style.setProperty('--mouse-x', mouseX);
      document.body.style.setProperty('--mouse-y', mouseY);
    });


  document.querySelectorAll('.vote-btn').forEach(button => {
    button.addEventListener('click', async (e) => {
      e.preventDefault();

      const type = button.dataset.type;
      const container = button.closest('.vote-buttons');
      const hazardId = container.dataset.id;

      try {
        const res = await fetch(`/hazard/${hazardId}/vote/${type}`, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          }
        });

        if (!res.ok) throw new Error("Failed to vote");

        const data = await res.json();

        // Update counts
        container.querySelector('.true-count').textContent = data.trueVotes;
        container.querySelector('.false-count').textContent = data.falseVotes;
      } catch (err) {
        alert("Error: " + err.message);
        console.error(err);
      }
    });
  });





  </script>
</body>
</html>